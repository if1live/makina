package main

import "regexp"

var notAllowedPrefixList = []string{
	"0",
	"0x",

	// 특수문자
	"-",
	"_",
	"+",
	"\\",
	"/",
	"~",
	`"`,
	"[",
	"]",
	"(",
	")",
	"【",
	"】",
	"（",
	"）",
	"「",
	"」",

	"★",
}

/* 대소문자 무시 */
var notAllowedSuffixList = []string{
	// 자주 쓰일거같은 postfix
	"번",
	"회",
	"명",
	"여명",
	"밖",
	"개",
	"배",
	"권",
	"짜리",
	"알",
	"gtb",
	"가지",
	"까지",
	"대",
	"넣",
	"을",
	"동안",
	"장",
	"퍼",

	"에",
	"로",
	"으로",
	"이었",
	"이엇",
	"였",

	"트윗",
	"블락",
	"팔로",
	"정도",
	"rt",
	"알티",

	"점",
	"위",
	"pt",
	"p",
	"렙",
	"뎀",
	"레벨",
	"포인트",
	"골",
	"k",
	"킬",

	// 자주 쓰이는 외국어
	"点",
	"個",
	"回",
	"人",
	"字",
	"位",
	"千",
	"万",
	"日",
	"本",
	"の",
	"フ",
	"で",
	"α",
	"β",

	// 거리
	"cm",
	"m",
	"km",
	"미터",
	"피트",
	"센티",
	"킬로",
	"마일",

	// 시간
	"시",
	"초",
	"분",
	"시",
	"개월",
	"년",
	"월",

	"억",
	"만",

	// 글쎼?
	"세대",
	"가루",

	// 특수문자
	"%",
	"_",
	"-",
	"+",
	"/",
	"~",
	`"`,
	"…",

	"[",
	"]",
	"(",
	")",
	"【",
	"】",
	"（",
	"）",
	"「",
	"」",
}

// 등장했던거 위주로 보충해나가자
// 소문자로 쓰기
// false positive 피하는 방향이 나중에 덜 피곤하다
// 아니다 싶으면 그냥 금지어로 등록
var predefinedBlackListKeyword = []string{
	// 은행이라는 단어가 등장하면 계좌번호겠지?
	"은행",
	"신한",
	"하나",
	"국민",

	"일러스트",
	"팝픈",
	"주식",
	"해금",
	"빌드",
	"체력",
	"방어",
	"test",
	"테스트",
	"초회판",
	"id",
	"관객",
	"버스",
	"점수",
	"생년",
	"가격",
	"本家",
	"magnet",
	"등수",
	"시그널",
	"level",
	"build",
	"단위",
	"万位",

	"SSR",

	"via",
	"aka",

	"avg",
	"sum",
	"max",
	"min",

	"no.",

	"iso",

	"kcal",
	"cal",

	// 금액
	"금액",
	"화폐",

	"원",
	"엔",
	"달러",

	"₩",
	"$",
	"¥",
	"円",

	"usd",
	"krw",
	"jpy",
	"yen",

	// 금액 확장
	"메소",
	"세라",
	"쥬얼",
	"jewel",

	// 노래방
	"금영",
	"태진",

	"ㅋㅋㅋㅋㅋㅋㅋ",

	"블언블",

	// 코미케 예약
	"C91",
	"C92",
	"C93",
	"C94",
	"C95",
	"C96",
	"C97",
	"C98",
	"C99",

	// 해시 장난질이 많아서 그냥 제외시킴
	"#",

	// 관용구로 등장하는 숫자
	"1111",
	"2222",
	"3333",
	"4444",
	"5555",
	"6666",
	"7777",
	"8888",
	"9999",
	"0000",

	"8086",
	"80286",
	"80386",
	"80486",

	"25252",
}

var notAllowedCodes = []string{
	// 2**n 중 6자리 숫자 제외
	"131072",
	"262144",
	"524288",
}

var reHitomiGallery = regexp.MustCompile(`/galleries/(\d+).html`)
var reHitomiReader = regexp.MustCompile(`/reader/(\d+).html`)

var simpleIgnoreReList = []*regexp.Regexp{
	regexp.MustCompile(`@.*`),
	regexp.MustCompile(`#.*`),
}
